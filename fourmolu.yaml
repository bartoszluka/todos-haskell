indentation: 4                     # How many spaces to use as an indent
function-arrows: trailing          # Where to place arrows in type signatures
comma-style: leading               # Where to place commas in lists, tuples, etc.
import-export-style: diff-friendly # How to format multiline import/export lists (diff-friendly lists have trailing commas but keep the opening parenthesis on the same line as import)
indent-wheres: false               # Use an extra level of indentation vs only half-indent the where keyword
record-brace-space: false          # rec {x = 1} vs rec{x = 1}
newlines-between-decls: 1          # Number of newlines between top-level declarations
haddock-style: multi-line          # Use -- |, {- |, or {-| for multiline haddocks (single-line haddocks always use --)
let-style: auto                    # How to style let blocks (auto uses newline if there's a newline in the input and inline otherwise, and mixed uses inline only when the let has exactly one binding)
in-style: right-align              # How to align the in keyword with respect to let
respectful: true                   # Be less aggressive in reformatting input, e.g. keep empty lines in import list
fixities: []                       # See the "Language extensions, dependencies, and fixities" section below

